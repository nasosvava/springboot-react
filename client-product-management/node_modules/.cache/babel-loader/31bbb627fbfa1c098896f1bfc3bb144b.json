{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasos\\\\Desktop\\\\springboot-react\\\\client-product-management\\\\src\\\\guards\\\\AuthGuard.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserService from '../services/user.service';\n\nclass AuthGuard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      component: Component,\n      roles\n    } = this.props;\n    const currentUser = UserService.currentUserValue;\n\n    if (!currentUser) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/login'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }\n      });\n    }\n\n    if (roles && roles.indexOf(currentUser.role) === -1) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/401'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default AuthGuard;","map":{"version":3,"sources":["C:/Users/Nasos/Desktop/springboot-react/client-product-management/src/guards/AuthGuard.jsx"],"names":["React","Route","Redirect","UserService","AuthGuard","Component","constructor","props","render","component","roles","currentUser","currentUserValue","pathname","indexOf","role"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,SAAS,EAAEJ,SAAZ;AAAuBK,MAAAA;AAAvB,QAAgC,KAAKH,KAA3C;AACA,UAAMI,WAAW,GAAGR,WAAW,CAACS,gBAAhC;;AACA,QAAG,CAACD,WAAJ,EAAgB;AACd,0BAAQ,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD;;AAED,QAAGH,KAAK,IAAIA,KAAK,CAACI,OAAN,CAAcH,WAAW,CAACI,IAA1B,MAAoC,CAAC,CAAjD,EAAmD;AACjD,0BAAQ,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAACF,UAAAA,QAAQ,EAAE;AAAX,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD;;AAED,wBAAQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD;;AAlBoC;;AAsBvC,eAAeT,SAAf","sourcesContent":["import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport UserService from '../services/user.service';\n\nclass AuthGuard extends React.Component{\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {component: Component, roles} = this.props;\n    const currentUser = UserService.currentUserValue;\n    if(!currentUser){\n      return (<Redirect to={{pathname: '/login'}}/>);\n    }\n\n    if(roles && roles.indexOf(currentUser.role) === -1){\n      return (<Redirect to={{pathname: '/401'}}/>);\n    }\n\n    return (<Component/>);\n  }\n\n}\n\nexport default AuthGuard;\n"]},"metadata":{},"sourceType":"module"}