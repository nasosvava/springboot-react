{"ast":null,"code":"import axios from 'axios';\nimport { BehaviorSubject } from 'rxjs';\nconst API_URL = 'http://localhost:8080/api/user/';\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nclass UserService {\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n  get currentUser() {\n    return currentUserSubject.asObservable();\n  }\n\n  login(user) {\n    //btoa: Basic64 encryption\n    const headers = {\n      authorization: 'Basic ' + btoa(user.username + ':' + user.password)\n    };\n    return axios.get(API_URL + 'login', {\n      headers: headers\n    }).then(response => {\n      localStorage.setItem('currentUser', JSON.stringify(response.data));\n      currentUserSubject.next(response.data);\n    });\n  }\n\n  logOut() {\n    return axios.post(API_URL + \"logout\", {}).then(response => {\n      localStorage.removeItem('currentUser');\n      currentUserSubject.next(null);\n    });\n  }\n\n  register(user) {\n    return axios.post(API_URL + 'registration', JSON.stringify(user), {\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  }\n\n  findAllProducts() {\n    return axios.get(API_URL + \"products\", {\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  }\n\n  purchaseProduct(transaction) {\n    return axios.post(API_URL + \"purchase\", JSON.stringify(transaction), {\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/Nasos/Desktop/springboot-react-master/client-product-management/src/services/user.service.js"],"names":["axios","BehaviorSubject","API_URL","currentUserSubject","JSON","parse","localStorage","getItem","UserService","currentUserValue","value","currentUser","asObservable","login","user","headers","authorization","btoa","username","password","get","then","response","setItem","stringify","data","next","logOut","post","removeItem","register","findAllProducts","purchaseProduct","transaction"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,MAA9B;AAEA,MAAMC,OAAO,GAAG,iCAAhB;AACA,MAAMC,kBAAkB,GAAG,IAAIF,eAAJ,CAAoBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAA3B;;AAEA,MAAMC,WAAN,CAAkB;AAEI,MAAhBC,gBAAgB,GAAG;AACrB,WAAON,kBAAkB,CAACO,KAA1B;AACD;;AAEc,MAAXC,WAAW,GAAG;AAChB,WAAOR,kBAAkB,CAACS,YAAnB,EAAP;AACD;;AAEDC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAE,WAAWC,IAAI,CAACH,IAAI,CAACI,QAAL,GAAgB,GAAhB,GAAsBJ,IAAI,CAACK,QAA5B;AADhB,KAAhB;AAIA,WAAOnB,KAAK,CAACoB,GAAN,CAAUlB,OAAO,GAAG,OAApB,EAA6B;AAACa,MAAAA,OAAO,EAAEA;AAAV,KAA7B,EACAM,IADA,CACKC,QAAQ,IAAI;AAChBhB,MAAAA,YAAY,CAACiB,OAAb,CAAqB,aAArB,EAAoCnB,IAAI,CAACoB,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAApC;AACAtB,MAAAA,kBAAkB,CAACuB,IAAnB,CAAwBJ,QAAQ,CAACG,IAAjC;AACD,KAJA,CAAP;AAKD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO3B,KAAK,CAAC4B,IAAN,CAAW1B,OAAO,GAAG,QAArB,EAA+B,EAA/B,EACEmB,IADF,CACOC,QAAQ,IAAI;AAChBhB,MAAAA,YAAY,CAACuB,UAAb,CAAwB,aAAxB;AACA1B,MAAAA,kBAAkB,CAACuB,IAAnB,CAAwB,IAAxB;AACD,KAJF,CAAP;AAKD;;AAEDI,EAAAA,QAAQ,CAAChB,IAAD,EAAO;AACb,WAAOd,KAAK,CAAC4B,IAAN,CAAW1B,OAAO,GAAG,cAArB,EAAqCE,IAAI,CAACoB,SAAL,CAAeV,IAAf,CAArC,EACT;AAACC,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB;AAAV,KADS,CAAP;AAED;;AAEDgB,EAAAA,eAAe,GAAG;AAChB,WAAO/B,KAAK,CAACoB,GAAN,CAAUlB,OAAO,GAAG,UAApB,EACT;AAACa,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB;AAAV,KADS,CAAP;AAED;;AAEDiB,EAAAA,eAAe,CAACC,WAAD,EAAc;AAC3B,WAAOjC,KAAK,CAAC4B,IAAN,CAAW1B,OAAO,GAAG,UAArB,EAAiCE,IAAI,CAACoB,SAAL,CAAeS,WAAf,CAAjC,EACT;AAAClB,MAAAA,OAAO,EAAE;AAAC,wBAAe;AAAhB;AAAV,KADS,CAAP;AAED;;AA5Ce;;AAgDlB,eAAe,IAAIP,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\nimport {BehaviorSubject} from 'rxjs';\n\nconst API_URL = 'http://localhost:8080/api/user/';\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nclass UserService {\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n  get currentUser() {\n    return currentUserSubject.asObservable();\n  }\n\n  login(user) {\n    //btoa: Basic64 encryption\n    const headers = {\n      authorization: 'Basic ' + btoa(user.username + ':' + user.password)\n    };\n\n    return axios.get(API_URL + 'login', {headers: headers})\n          .then(response => {\n            localStorage.setItem('currentUser', JSON.stringify(response.data));\n            currentUserSubject.next(response.data);\n          });\n  }\n\n  logOut() {\n    return axios.post(API_URL + \"logout\", {})\n            .then(response => {\n              localStorage.removeItem('currentUser');\n              currentUserSubject.next(null);\n            });\n  }\n\n  register(user) {\n    return axios.post(API_URL + 'registration', JSON.stringify(user),\n  {headers: {\"Content-Type\":\"application/json; charset=UTF-8\"}});\n  }\n\n  findAllProducts() {\n    return axios.get(API_URL + \"products\",\n  {headers: {\"Content-Type\":\"application/json; charset=UTF-8\"}});\n  }\n\n  purchaseProduct(transaction) {\n    return axios.post(API_URL + \"purchase\", JSON.stringify(transaction),\n  {headers: {\"Content-Type\":\"application/json; charset=UTF-8\"}});\n  }\n\n}\n\nexport default new UserService();\n"]},"metadata":{},"sourceType":"module"}