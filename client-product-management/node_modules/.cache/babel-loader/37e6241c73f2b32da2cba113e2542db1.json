{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nasos\\\\Desktop\\\\springboot-react\\\\client-product-management\\\\src\\\\components\\\\register\\\\RegisterPage.jsx\";\nimport React from 'react';\nimport UserService from '../../services/user.service';\nimport { User } from '../../models/user';\nimport './RegisterPage.css';\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (UserService.currentUserValue) {\n      this.props.history.push('/');\n    }\n\n    this.state = {\n      user: new User('', '', ''),\n      submitted: false,\n      loading: false,\n      errorMessage: ''\n    };\n  }\n\n  handleChange(e) {\n    var {\n      name,\n      value\n    } = e.target;\n    var user = this.state.user;\n    user[name] = value;\n    this.setState({\n      user: user\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      user\n    } = this.state;\n\n    if (!(user.username && user.password && user.name)) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    });\n    UserService.register(user).then(data => {\n      this.props.history.push(\"/login\");\n    }, error => {\n      if (error.response.status === 409) {\n        this.setState({\n          errorMessage: \"Username is not available\",\n          loading: false\n        });\n      } else {\n        this.setState({\n          errorMessage: \"Unexpected error occurred.\",\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      user,\n      submitted,\n      loading,\n      errorMessage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"profile-id\",\n      className: \"profile-img-card\",\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Error! \"), \" \", errorMessage), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"form\",\n      onSubmit: e => this.handleRegister(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'form-group' + (submitted && user.name ? 'has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      value: user.name,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), submitted && !user.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Full name is required.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'form-group' + (submitted && user.username ? 'has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      value: user.username,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }), submitted && !user.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Username is required.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'form-group' + (submitted && user.password ? 'has-error' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: user.password,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), submitted && !user.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Password is required.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block btn-signin form-submit-button\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Sign Up\")))));\n  }\n\n}\n\nexport { RegisterPage };","map":{"version":3,"sources":["C:/Users/Nasos/Desktop/springboot-react/client-product-management/src/components/register/RegisterPage.jsx"],"names":["React","UserService","User","RegisterPage","Component","constructor","props","currentUserValue","history","push","state","user","submitted","loading","errorMessage","handleChange","e","name","value","target","setState","handleRegister","preventDefault","username","password","register","then","data","error","response","status","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UserService from '../../services/user.service';\nimport {User} from '../../models/user';\nimport './RegisterPage.css';\n\nclass RegisterPage extends React.Component {\n  constructor(props){\n    super(props);\n\n    if(UserService.currentUserValue){\n      this.props.history.push('/');\n    }\n\n    this.state = {\n      user: new User('','',''),\n      submitted: false,\n      loading: false,\n      errorMessage: ''\n    };\n  }\n\n  handleChange(e) {\n    var {name, value} = e.target;\n    var user = this.state.user;\n    user[name] = value;\n    this.setState({user: user});\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({submitted: true});\n    const{user} = this.state;\n\n    if(!(user.username && user.password && user.name)){\n      return;\n    }\n\n    this.setState({loading: true});\n    UserService.register(user)\n      .then(\n        data => {\n            this.props.history.push(\"/login\");\n        },\n        error => {\n          if(error.response.status === 409){\n            this.setState({\n              errorMessage: \"Username is not available\",\n              loading: false\n            });\n          }else{\n            this.setState({\n              errorMessage: \"Unexpected error occurred.\",\n              loading: false\n            });\n          }\n        }\n      );\n  }\n\n  render() {\n    const {user, submitted, loading, errorMessage} = this.state;\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img id=\"profile-id\" className=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"/>\n          {errorMessage &&\n            <div className=\"alert alert-danger\" role=\"alert\">\n            <strong>Error! </strong> {errorMessage}\n            </div>\n          }\n          <form name=\"form\" onSubmit={(e) => this.handleRegister(e)}>\n              <div className={'form-group' + (submitted && user.name ? 'has-error': '')}>\n              <label htmlFor=\"name\">Full Name</label>\n              <input type=\"text\" className=\"form-control\" name=\"name\" value={user.name} onChange={(e)=>this.handleChange(e)}/>\n              {submitted && !user.name &&\n                <div className=\"alert alert-danger\" role=\"alert\">Full name is required.</div>\n              }\n              </div>\n\n              <div className={'form-group' + (submitted && user.username ? 'has-error': '')}>\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" className=\"form-control\" name=\"username\" value={user.username} onChange={(e)=>this.handleChange(e)}/>\n              {submitted && !user.username &&\n                <div className=\"alert alert-danger\" role=\"alert\">Username is required.</div>\n              }\n              </div>\n\n              <div className={'form-group' + (submitted && user.password ? 'has-error': '')}>\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" className=\"form-control\" name=\"password\" value={user.password} onChange={(e)=>this.handleChange(e)}/>\n              {submitted && !user.password &&\n                <div className=\"alert alert-danger\" role=\"alert\">Password is required.</div>\n              }\n              </div>\n              <div className=\"form-group\">\n                <button className=\"btn btn-lg btn-primary btn-block btn-signin form-submit-button\" disabled={loading}>Sign Up</button>\n              </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport {RegisterPage};\n"]},"metadata":{},"sourceType":"module"}